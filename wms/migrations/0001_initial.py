# Generated by Django 5.1.1 on 2024-09-18 09:13

import django.core.validators
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='ProductCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True, verbose_name='Название')),
            ],
            options={
                'verbose_name': 'Категория товара',
                'verbose_name_plural': 'Категории товаров',
            },
        ),
        migrations.CreateModel(
            name='Receipt',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('receipt_number', models.CharField(help_text='Уникальный номер поступления', max_length=50, unique=True, verbose_name='Номер поступления')),
                ('receipt_date', models.DateTimeField(auto_now_add=True, verbose_name='Дата поступления')),
                ('transport_costs', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=10, null=True, verbose_name='Транспортные расходы')),
                ('other_costs', models.DecimalField(decimal_places=2, default=0, max_digits=10, verbose_name='Прочие расходы')),
                ('purchase_currency', models.CharField(default='USD', max_length=3, verbose_name='Валюта покупки')),
            ],
            options={
                'verbose_name': 'Поступление',
                'verbose_name_plural': 'Поступления',
            },
        ),
        migrations.CreateModel(
            name='Supplier',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True, verbose_name='Название')),
                ('inn', models.CharField(blank=True, max_length=20, verbose_name='ИНН')),
                ('address', models.TextField(blank=True, verbose_name='Адрес')),
                ('phone', models.CharField(blank=True, max_length=20, verbose_name='Телефон')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='Email')),
                ('contact_name', models.CharField(blank=True, max_length=255, verbose_name='Контактное лицо')),
                ('description', models.TextField(blank=True, verbose_name='Комментарий')),
            ],
            options={
                'verbose_name': 'Поставщик',
                'verbose_name_plural': 'Поставщик',
            },
        ),
        migrations.CreateModel(
            name='UnitOfMeasure',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, verbose_name='Название')),
                ('short_name', models.CharField(max_length=10, verbose_name='Краткое наименование')),
            ],
            options={
                'verbose_name': 'Единица измерения',
                'verbose_name_plural': 'Единицы измерения',
            },
        ),
        migrations.CreateModel(
            name='VAT',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rate', models.DecimalField(decimal_places=2, max_digits=5, verbose_name='Ставка НДС')),
                ('name', models.CharField(blank=True, max_length=50, verbose_name='Название')),
            ],
            options={
                'verbose_name': 'НДС',
                'verbose_name_plural': 'НДС',
            },
        ),
        migrations.CreateModel(
            name='Warehouse',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True, verbose_name='Названия')),
                ('address', models.CharField(max_length=255, verbose_name='Адрес')),
                ('description', models.TextField(blank=True, verbose_name='Описание')),
                ('type', models.CharField(choices=[('готовая_продукция', 'Склад готовой продукции'), ('сырье', 'Склад сырья'), ('продажи_готовой_продукции', 'Склад продаж готовой продукции'), ('продажи_материалов', 'Склад продаж материалов'), ('мобильный', 'Мобильный репозиторий')], max_length=50, verbose_name='тип')),
            ],
            options={
                'verbose_name': 'Склад',
                'verbose_name_plural': 'Склад',
            },
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Название')),
                ('photo', models.ImageField(blank=True, null=True, upload_to='products/', verbose_name='Фотография')),
                ('barcode', models.CharField(blank=True, max_length=50, null=True, verbose_name='Штрих-код')),
                ('min_quantity', models.DecimalField(decimal_places=2, default=0, max_digits=10, verbose_name='Мин. остаток')),
                ('manufacturer', models.CharField(blank=True, max_length=255, null=True, verbose_name='Производитель')),
                ('brand', models.CharField(blank=True, max_length=255, null=True, verbose_name='Бренд')),
                ('article', models.CharField(blank=True, max_length=50, null=True, verbose_name='Артикул')),
                ('color', models.CharField(blank=True, max_length=50, null=True, verbose_name='Цвет')),
                ('code', models.CharField(blank=True, max_length=50, null=True, verbose_name='Код')),
                ('weight', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='Граммаж')),
                ('width', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='Ширина')),
                ('hs_code', models.CharField(blank=True, max_length=20, null=True, verbose_name='Код ТН ВЭД')),
                ('composition', models.CharField(blank=True, max_length=255, null=True, verbose_name='Состав')),
                ('price', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='Цена')),
                ('selling_price', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='Цена продажи')),
                ('min_selling_price', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='Мин. цена продажи')),
                ('category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='wms.productcategory', verbose_name='Категория')),
                ('unit_of_measure', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='wms.unitofmeasure', verbose_name='Единица измерения')),
            ],
            options={
                'verbose_name': 'Товар',
                'verbose_name_plural': 'Товары',
            },
        ),
        migrations.CreateModel(
            name='ReceiptItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('roll', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, validators=[django.core.validators.MinValueValidator(1)], verbose_name='Рулон')),
                ('quantity', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(0.01)], verbose_name='Количество кг/шт')),
                ('price', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(0.01)], verbose_name='Цена за единицу')),
                ('cost_price', models.DecimalField(decimal_places=2, default=0, max_digits=10, verbose_name='Себестоимость')),
                ('category', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='wms.productcategory', verbose_name='Категория')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='wms.product', verbose_name='Товар/Материал')),
                ('receipt', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='items', to='wms.receipt', verbose_name='Поступление')),
                ('unit_of_measure', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='wms.unitofmeasure', verbose_name='Единица измерения')),
            ],
            options={
                'verbose_name': 'Позиция поступления',
                'verbose_name_plural': 'Позиции поступления',
            },
        ),
        migrations.CreateModel(
            name='Return',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('return_date', models.DateTimeField(auto_now_add=True, verbose_name='Дата возврата')),
                ('quantity', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Количество')),
                ('reason', models.TextField(blank=True, verbose_name='Причина возврата')),
                ('receipt_item', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='wms.receiptitem', verbose_name='Позиция поступления')),
            ],
        ),
        migrations.AddField(
            model_name='receipt',
            name='supplier',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='wms.supplier', verbose_name='Поставщик'),
        ),
        migrations.AddField(
            model_name='receipt',
            name='vat',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='wms.vat', verbose_name='НДС'),
        ),
        migrations.AddField(
            model_name='receipt',
            name='warehouse',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='wms.warehouse', verbose_name='Склад'),
        ),
        migrations.CreateModel(
            name='Moving',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='количество')),
                ('move_date', models.DateTimeField(auto_now_add=True, verbose_name='дата перемещения')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='wms.product', verbose_name='Материал')),
                ('warehouse_from_where', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='перемещения_откуда', to='wms.warehouse', verbose_name='со склада')),
                ('warehouse_where', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='перемещения_куда', to='wms.warehouse', verbose_name='на склад')),
            ],
            options={
                'verbose_name': 'Перемещения',
                'verbose_name_plural': 'Перемещения',
            },
        ),
        migrations.CreateModel(
            name='WarehouseWithStockProxy',
            fields=[
            ],
            options={
                'verbose_name': 'Склад и остатки',
                'verbose_name_plural': 'Склады и остатки',
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('wms.warehouse',),
        ),
        migrations.CreateModel(
            name='Stock',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.DecimalField(decimal_places=2, default=0, max_digits=10, verbose_name='Количество')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='wms.product', verbose_name='Материал')),
                ('warehouse', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='wms.warehouse', verbose_name='Склад')),
            ],
            options={
                'verbose_name': 'Остаток',
                'verbose_name_plural': 'Остатки',
                'unique_together': {('product', 'warehouse')},
            },
        ),
    ]
